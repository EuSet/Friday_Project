{"version":3,"sources":["components/common/c2-SuperButton/SuperButton.module.css","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/header/header.module.css","redux/auth-reducer/auth-reducer.ts","redux/profile-reducer/profile-reducer.ts","redux/store.ts","components/common/c2-SuperButton/SuperButton.tsx","components/header/header.tsx","components/main/login/login.tsx","components/main/login/addNewPassword.tsx","components/main/login/registration.tsx","components/main/login/resetPassword.tsx","components/main/profile/profile.tsx","components/main/notFound/notFound.tsx","components/common/c1-SuperInputText/SuperInputText.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/test/test.tsx","components/main/main.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","initState","rootReducer","combineReducers","auth","state","profile","store","createStore","applyMiddleware","thunk","SuperButton","red","className","title","disabled","restProps","finalClassName","s","custom_btn","btnStyle","btnStyleDisabled","Header","h","header","to","Login","AddNewPassword","Registration","ResetPassword","Profile","NotFound","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","setError","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","wrap","e","currentTarget","value","key","focusBorder","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","Main","path","render","exact","from","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ed4dad9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom_btn\":\"SuperButton_custom_btn__2pCFP\",\"btnStyle\":\"SuperButton_btnStyle__AATAH\",\"title\":\"SuperButton_title__3xwSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1pWxV\",\"error\":\"SuperInputText_error__enpvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Pd5Gw\",\"spanClassName\":\"SuperCheckbox_spanClassName__rgVCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__a9zJx\"};","\r\ntype AuthInitialStateType = {\r\n\r\n}\r\nexport type AuthActionsType = {\r\n\r\n}\r\nconst initState:AuthInitialStateType = {\r\n\r\n}\r\nexport const authReducer = (state:AuthInitialStateType = initState, action:AuthActionsType):AuthInitialStateType => {\r\n    return state\r\n}\r\n","\r\ntype ProfileInitialStateType = {\r\n\r\n}\r\nexport type ProfileActionsType = {\r\n\r\n}\r\nconst initState:ProfileInitialStateType = {\r\n\r\n}\r\nexport const profileReducer = (state:ProfileInitialStateType = initState, action:ProfileActionsType):ProfileInitialStateType => {\r\n    return state\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {authReducer} from \"./auth-reducer/auth-reducer\";\r\nimport {profileReducer} from \"./profile-reducer/profile-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n})\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n// export type AppActionsType = AuthActionsType | ProfileActionsType\r\n// export type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootState, unknown, AppActionsType>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    title?:string\r\n    disabled?:boolean\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,title,disabled,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = disabled ? `${s.custom_btn} ${s.btnStyle} ${s.btnStyleDisabled}` : `${s.custom_btn} ${s.btnStyle}`\r\n\r\n    return (\r\n        <button\r\n            // disabled={true}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >\r\n            {/*<span>Click!</span>*/}\r\n            <span className={s.title}>{title}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from \"react\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport h from \"./header.module.css\"\r\nexport const Header = () => {\r\n    return <div className={h.header}>\r\n        <NavLink to={'/registration'}><SuperButton title={'registration'}/></NavLink>\r\n        <NavLink to={'/login'}><SuperButton title={'login'}/></NavLink>\r\n        <NavLink to={'/resetpassword'}><SuperButton title={'resetPass'}/></NavLink>\r\n        <NavLink to={'/addnewpassword'}><SuperButton title={'newPass'}/></NavLink>\r\n        <NavLink to={'/profile'}><SuperButton title={'profile'}/></NavLink>\r\n        <NavLink to={'/'}><SuperButton title={'test'}/></NavLink>\r\n    </div>\r\n}\r\n","export const Login = () => {\r\n    return <>\r\n        Login\r\n        </>\r\n}\r\n","export const AddNewPassword = () => {\r\n    return <>\r\n        AddNewPassword\r\n    </>\r\n}\r\n","export const Registration = () => {\r\n    return <>\r\n        Registration\r\n        </>\r\n}\r\n","export const ResetPassword = () => {\r\n    return <>\r\n        ResetPassword\r\n     </>\r\n}\r\n","export const Profile = () => {\r\n    return <>\r\n        Profile\r\n        </>\r\n}\r\n","export const NotFound = () => {\r\n    return <>\r\n        NotFound\r\n        </>\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    setError?: (value:string) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        setError,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${className} ${ error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrap}>\r\n                <input\r\n                    type={'text'}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n                <span className={s.focusBorder}>\r\n            \t<i></i>\r\n            </span>\r\n            </div>\r\n           <div>\r\n               {error && <span className={finalSpanClassName}>{error}</span>}\r\n           </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked:boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n      onChangeChecked && onChangeChecked(!restProps.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport React from \"react\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText/>\r\n        <SuperCheckbox/>\r\n    </div>\r\n}\r\n","import {Login} from \"./login/login\";\r\nimport React from \"react\";\r\nimport {AddNewPassword} from \"./login/addNewPassword\";\r\nimport {Registration} from \"./login/registration\";\r\nimport {ResetPassword} from \"./login/resetPassword\";\r\nimport {Profile} from \"./profile/profile\";\r\nimport {NotFound} from \"./notFound/notFound\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Test} from \"../test/test\";\r\n\r\nexport const Main = () => {\r\n    return <>\r\n        <Switch>\r\n            <Route path={'/registration'} render={() => <Registration/>}/>\r\n            <Route path={'/login'} render={() => <Login/>}/>\r\n            <Route path={'/resetpassword'} render={() => <ResetPassword/>}/>\r\n            <Route path={'/addnewpassword'} render={() => <AddNewPassword/>}/>\r\n            <Route path={'/profile'} render={() =>  <Profile/>}/>\r\n            <Route exact path={'/'} render={() => <Test/>}/>\r\n            <Route path={'/404'} render={() => <NotFound/>}/>\r\n            <Redirect from={'*'} to={'/404'}/>\r\n        </Switch>\r\n    </>\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"../redux/store\";\nimport {Header} from \"../components/header/header\";\nimport {Main} from \"../components/main/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n      <HashRouter>\n        <Header/>\n        <Main/>\n      </HashRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}