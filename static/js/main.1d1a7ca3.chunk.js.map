{"version":3,"sources":["components/common/c2-SuperButton/SuperButton.module.css","components/main/login/login.module.css","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/preloader/Preloader.module.css","components/header/header.module.css","components/main/login/resetPassword.module.css","api/registration-api.ts","redux/auth-reducer/auth-reducer.ts","components/main/login/resetPasswordApi.tsx","redux/auth-reducer/reset-reducer.ts","redux/profile-reducer/profile-reducer.ts","components/main/login/loginApi.ts","redux/login-reducer/login-reducer.ts","redux/store.ts","components/common/c2-SuperButton/SuperButton.tsx","components/header/header.tsx","components/common/c1-SuperInputText/SuperInputText.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/main/login/login.tsx","components/common/preloader/Preloader.tsx","components/main/login/addNewPassword.tsx","components/main/login/registration.tsx","components/main/login/resetPassword.tsx","components/main/profile/profile.tsx","components/main/notFound/notFound.tsx","components/test/test.tsx","components/main/main.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","payload","post","authActions","initState","userRegistrationData","email","password","singUp","dispatch","then","res","type","catch","error","alert","resetPasswordApi","resetPasswordToken","isSent","isCreate","isLoader","setError","setLoader","id","name","avatar","publicCardPacksCount","authApi","data","delete","initialState","isLoggedIn","setIsLoggedInAC","value","rootReducer","combineReducers","auth","state","action","login","profile","reset","store","createStore","applyMiddleware","thunk","window","SuperButton","red","className","title","disabled","restProps","finalClassName","s","custom_btn","btnStyle","btnStyleDisabled","Header","h","header","to","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","wrap","e","currentTarget","key","focusBorder","SuperCheckbox","onChangeChecked","children","checkbox","container","checked","checkmark","Login","useDispatch","useState","setEmail","setPassword","rememberMe","setRememberMe","useSelector","loginForm","forgotPassword","submitLogin","onClick","err","response","message","console","log","signUp","Preloader","preloader","spinner","AddNewPassword","useParams","r","main","target","placeholder","textWrap","btnWrap","a","createNewPasswordThunk","Registration","isRegistered","formik","useFormik","initialValues","checkPassword","validate","values","errors","test","length","onSubmit","resetForm","JSON","stringify","handleSubmit","getFieldProps","touched","style","color","ResetPassword","remember","setRemember","text","forgotPasswordThunk","changeIsSent","useCallback","useEffect","footer","btnFooterWrap","Profile","src","alt","NotFound","Test","Main","path","render","exact","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d1a7ca3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom_btn\":\"SuperButton_custom_btn__2pCFP\",\"btnStyle\":\"SuperButton_btnStyle__AATAH\",\"title\":\"SuperButton_title__3xwSv\",\"btnStyleDisabled\":\"SuperButton_btnStyleDisabled__rSJ35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"login_wrap__3EYjg\",\"loginForm\":\"login_loginForm__28Rc3\",\"forgotPassword\":\"login_forgotPassword__30v1b\",\"signUp\":\"login_signUp__3vuWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__z-UMh\",\"errorInput\":\"SuperInputText_errorInput__1pWxV\",\"error\":\"SuperInputText_error__enpvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperCheckbox_container__1DyoD\",\"checkmark\":\"SuperCheckbox_checkmark__2lkA-\",\"checkbox\":\"SuperCheckbox_checkbox__Pd5Gw\",\"spanClassName\":\"SuperCheckbox_spanClassName__rgVCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1SGnT\",\"spinner\":\"Preloader_spinner__1YG1T\",\"spin\":\"Preloader_spin__25cpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__a9zJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"resetPassword_container__3DNc_\",\"main\":\"resetPassword_main__1GUi7\",\"error\":\"resetPassword_error__3VT8R\",\"textWrap\":\"resetPassword_textWrap__N-0_M\",\"btnWrap\":\"resetPassword_btnWrap__1ei4H\",\"footer\":\"resetPassword_footer__3leJj\",\"btnFooterWrap\":\"resetPassword_btnFooterWrap__3ERVl\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n  withCredentials: true,\r\n})\r\n\r\n// types\r\nexport type userRegType = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\n// registration api\r\n\r\nexport const authAPI = {\r\n  registration(payload: userRegType) {\r\n    return instance.post<any>(`auth/register`, payload)\r\n  },\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { authAPI } from '../../api/registration-api'\r\n\r\nexport const authActions = {\r\n  SIGN_UP: 'AUTH/SIGN_UP',\r\n}\r\n\r\nexport type AuthActionsType = signUpAT\r\nconst initState = {\r\n  userRegistrationData: {\r\n    email: ('' as string) || null,\r\n    password: ('' as string) || null,\r\n  },\r\n}\r\n\r\n// types\r\ntype signUpAT = ReturnType<typeof signUpAC>\r\ntype AuthInitialStateType = typeof initState\r\n\r\n//\r\n\r\nexport const authReducer = (\r\n  state: AuthInitialStateType = initState,\r\n  action: AuthActionsType\r\n): AuthInitialStateType => {\r\n  switch (action.type) {\r\n    case authActions.SIGN_UP:\r\n      return {\r\n        ...state,\r\n        userRegistrationData: {\r\n          email: action.email,\r\n          password: action.password,\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const signUpAC = (emailValue: string, passwordValue: string) =>\r\n  ({\r\n    type: authActions.SIGN_UP,\r\n    email: emailValue,\r\n    password: passwordValue,\r\n  } as const)\r\n\r\nexport const singUp =\r\n  (email: string, password: string) => (dispatch: Dispatch) => {\r\n    authAPI\r\n      .registration({ email, password })\r\n      .then(res => {\r\n        dispatch(signUpAC(email, password))\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n","import axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true,\r\n}\r\n//{\"addedUser\":{\"_id\":\"60d6e396d5086f000458d130\",\"email\":\"setskoeugene@inbox.ru\",\"rememberMe\":false,\"isAdmin\":false,\"name\":\"setskoeugene@inbox.ru\",\"verified\":false,\"publicCardPacksCount\":0,\"created\":\"2021-06-26T08:21:42.411Z\",\"updated\":\"2021-06-26T08:21:42.411Z\",\"__v\":0}}\r\n//https://fridayproject.herokuapp.com/2.0/\r\n//https://neko-back.herokuapp.com/2.0/\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    ...settings\r\n})\r\ntype resetResponseType = {\r\n    info: string\r\n    error:string\r\n}\r\nexport type authResponseType = {\r\n    id: string\r\n    email: string\r\n    name:string\r\n    avatar?:string\r\n    publicCardPacksCount: number\r\n}\r\nexport const resetPasswordApi = {\r\n    sendInstructions(email:string) {\r\n        return instance.post<resetResponseType>('auth/forgot', {email})\r\n    },\r\n    setNewPassword(password:string, resetPasswordToken:string) {\r\n        return instance.post<resetResponseType>('auth/set-new-password',{password, resetPasswordToken})\r\n    }\r\n}\r\nexport const profileApi = {\r\n    authMe() {\r\n    return instance.post<authResponseType>('auth/me', {})\r\n    }\r\n}\r\n","import {AppThunk} from \"../store\";\r\nimport {resetPasswordApi} from \"../../components/main/login/resetPasswordApi\";\r\n\r\n\r\nconst IS_SENT = 'reset/IS_SENT'\r\nconst SET_ERROR = 'reset/SET_ERROR'\r\nconst IS_CREATE_NEW_PASSWORD = 'reset/IS_CREATE_NEW_PASSWORD'\r\nconst SET_LOADER = 'reset/SET_LOADER'\r\n\r\ntype ResetInitialStateType = {\r\n    isSent: boolean\r\n    error: string\r\n    isCreate: boolean\r\n    isLoader: boolean\r\n}\r\nexport type ResetActionsType = ReturnType<typeof isSentInstructions>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof isCreateNewPassword>\r\n    | ReturnType<typeof setLoader>\r\nconst initState: ResetInitialStateType = {\r\n    isSent: false,\r\n    error: '',\r\n    isCreate: false,\r\n    isLoader: false\r\n}\r\nexport const resetReducer = (state: ResetInitialStateType = initState, action: ResetActionsType): ResetInitialStateType => {\r\n    switch (action.type) {\r\n        case \"reset/IS_SENT\":\r\n        case \"reset/SET_ERROR\":\r\n        case \"reset/IS_CREATE_NEW_PASSWORD\":\r\n        case \"reset/SET_LOADER\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isSentInstructions = (isSent: boolean) => {\r\n    return {type: IS_SENT, payload: {isSent: isSent}} as const\r\n}\r\nexport const setError = (error: string) => {\r\n    return {type: SET_ERROR, payload: {error}} as const\r\n}\r\nexport const setLoader = (isLoader: boolean) => {\r\n    return {type: SET_LOADER, payload: {isLoader}} as const\r\n}\r\nexport const isCreateNewPassword = (isCreate: boolean) => {\r\n    return {type: IS_CREATE_NEW_PASSWORD, payload: {isCreate}} as const\r\n}\r\nexport const forgotPasswordThunk = (email: string): AppThunk => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoader(true))\r\n        await resetPasswordApi.sendInstructions(email)\r\n        dispatch(isSentInstructions(true))\r\n    } catch (e) {\r\n        dispatch(setError('something wrong'))\r\n    }\r\n    dispatch(setLoader(false))\r\n}\r\nexport const createNewPasswordThunk = (password: string, resetPasswordToken: string)\r\n    : AppThunk => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoader(true))\r\n        await resetPasswordApi.setNewPassword(password, resetPasswordToken)\r\n        dispatch(isCreateNewPassword(true))\r\n    } catch (e) {\r\n        dispatch(setError('something wrong'))\r\n    }\r\n    dispatch(setLoader(false))\r\n}\r\n","import {AppThunk} from \"../store\";\r\nimport {authResponseType, profileApi} from \"../../components/main/login/resetPasswordApi\";\r\nimport {setError, setLoader} from \"../auth-reducer/reset-reducer\";\r\nconst SET_AUTH_DATA = 'profile/SET_AUTH_DATA'\r\nexport type ProfileInitialStateType = {\r\n    id: string\r\n    email: string\r\n    name:string\r\n    avatar?:string\r\n    publicCardPacksCount: number | null\r\n\r\n}\r\nexport type ProfileActionsType = ReturnType<typeof setAuthData>\r\nexport const initState: ProfileInitialStateType = {\r\n    id: '',\r\n    email: '',\r\n    name:'',\r\n    avatar:'',\r\n    publicCardPacksCount: null\r\n}\r\nexport const profileReducer = (state: ProfileInitialStateType = initState, action: ProfileActionsType)\r\n    : ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET_AUTH_DATA\":\r\n            return {...state, ...action.data}\r\n    }\r\n    return state\r\n}\r\nexport const setAuthData = (data:authResponseType) => {\r\n    return {type:SET_AUTH_DATA, data} as const\r\n}\r\nexport const authMeThunk = ():AppThunk => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoader(true))\r\n        const res = await profileApi.authMe()\r\n        dispatch(setAuthData(res.data))\r\n    } catch (e) {\r\n        dispatch(setError(''))\r\n    }\r\n    dispatch(setLoader(false))\r\n}\r\n","import axios from 'axios'\r\nimport {LoginParamsType, loginResponseType} from \"../../../redux/login-reducer/login-reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\nexport const authApi = {\r\n\r\n    login(data: LoginParamsType) {\r\n        return instance.post<loginResponseType>(('auth/login'), data)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/me`)\r\n    },\r\n    authMe() {\r\n        return instance.post<loginResponseType>(`auth/me`) // проверка на залогиненность\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authApi} from \"../../components/main/login/loginApi\";\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    name: '',\r\n    avatar: '',\r\n    error:''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type loginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setUserDataACType = ReturnType<typeof setUserDataAC>\r\nexport type setUserNameACType = ReturnType<typeof setUserNameAC>\r\nexport type setUserAvatarACType = ReturnType<typeof setUserAvatarAC>\r\n\r\n\r\n\r\ntype ActionsType = setIsLoggedInACType  | setUserDataACType | setUserNameACType | setUserAvatarACType\r\n\r\n\r\nexport const loginReducer = (state:InitialStateType = initialState, action:ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET-IS-LOGGED-IN\":\r\n        return {...state, isLoggedIn: action.value}\r\n       case \"login/SET_USER\":\r\n            return {...state, ...action.payload}\r\n        case \"login/SET-NAME\":\r\n            return {...state, name: action.name}\r\n        case \"login/SET-AVATAR\":\r\n            return {...state, avatar: action.avatar}\r\n\r\n        default:\r\n            return state\r\n}}\r\n\r\n\r\n\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setUserNameAC = (name: string) => ({type: 'login/SET-NAME', name} as const)\r\nexport const setUserAvatarAC = (avatar: string) => ({type: 'login/SET-AVATAR', avatar} as const)\r\nexport const setUserDataAC = (name: string, isLoggedIn: boolean) => ({\r\n    type: 'login/SET_USER',\r\n    payload: {name, isLoggedIn}\r\n} as const)\r\n\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    authApi.login(data)\r\n        .then((res) => {\r\n              dispatch(setIsLoggedInAC(true))\r\n              dispatch(setUserNameAC(res.data.name))\r\n              dispatch(setUserAvatarAC(res.data.avatar))\r\n\r\n            }\r\n        )\r\n        .catch(err => {\r\n            const error = err.response\r\n                    ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n\r\n    authApi.logOut()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n\r\nexport const getUserDataTC = () => (dispatch: Dispatch) => {\r\n\r\n    authApi.authMe()\r\n        .then(res => {\r\n            dispatch(setUserDataAC(res.data.name, true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {authReducer} from \"./auth-reducer/auth-reducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer/profile-reducer\";\r\nimport {loginReducer} from \"./login-reducer/login-reducer\";\r\nimport {ResetActionsType, resetReducer} from \"./auth-reducer/reset-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    login:loginReducer,\r\n    profile: profileReducer,\r\n    reset: resetReducer\r\n})\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\nexport type AppActionsType = ResetActionsType | ProfileActionsType\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootState, unknown, AppActionsType>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    title?:string\r\n    disabled?:boolean\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,title,disabled,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = disabled ? `${s.custom_btn} ${s.btnStyle} ${s.btnStyleDisabled}` : `${s.custom_btn} ${s.btnStyle}`\r\n\r\n    return (\r\n        <button\r\n            disabled={disabled }\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >\r\n            {/*<span>Click!</span>*/}\r\n            <span className={s.title}>{title}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from \"react\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport h from \"./header.module.css\"\r\nexport const Header = () => {\r\n    return <div className={h.header}>\r\n        <NavLink to={'/registration'}><SuperButton title={'registration'}/></NavLink>\r\n        <NavLink to={'/login'}><SuperButton title={'login'}/></NavLink>\r\n        <NavLink to={'/resetpassword'}><SuperButton title={'resetPass'}/></NavLink>\r\n        <NavLink to={'/set-new-password/:resetPasswordToken'}><SuperButton title={'newPass'}/></NavLink>\r\n        <NavLink to={'/profile'}><SuperButton title={'profile'}/></NavLink>\r\n        <NavLink to={'/'}><SuperButton title={'test'}/></NavLink>\r\n    </div>\r\n}\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string \r\n    setError?: (value: string ) => void    // поменял для проверки @Suan\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        setError,\r\n        className, spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        onChange // если есть пропс onChange\r\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n            && e.key === 'Enter' // и если нажата кнопка Enter\r\n            && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${className} ${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrap}>\r\n                <input\r\n                    type={type ? type : 'text'}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n                <span className={s.focusBorder}>\r\n                    <i></i>\r\n                </span>\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked:boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n      onChangeChecked && onChangeChecked(!restProps.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {useState} from \"react\";\r\nimport s from \"./login.module.css\"\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../../redux/login-reducer/login-reducer\";\r\nimport {AppRootState} from \"../../../redux/store\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n\r\n    if (isLoggedIn) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            <div className={s.loginForm}>\r\n                <div>\r\n                    <h2>It-inkubator</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3>Sign In</h3>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <span>Email</span>\r\n                    <SuperInputText onChangeText={(value) => {\r\n                        setEmail(value)\r\n                    }}\r\n                                    value={email}/>\r\n                </div>\r\n                <div>\r\n                    <span>Password</span>\r\n                    <SuperInputText type={\"password\"}\r\n                                    onChangeText={(value) => {\r\n                                        setPassword(value)\r\n                                    }}\r\n                                    value={password}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Remember me</span>\r\n                    <SuperCheckbox checked={rememberMe}\r\n                                   onChangeChecked={(value) => {\r\n                                       setRememberMe(value)\r\n                                   }}/>\r\n                </div>\r\n                <div className={s.forgotPassword}>\r\n                    <NavLink to={'/resetpassword'}>Forgot Password?</NavLink>\r\n                </div>\r\n                <div className={s.submitLogin}>\r\n                    <SuperButton onClick={() => {\r\n                        dispatch(loginTC({email, password, rememberMe}))\r\n                    }} title={\"Login\"}/>\r\n                </div>\r\n\r\n                <div className={s.signUp}>\r\n                    <div>Don't have an account?</div>\r\n                    <NavLink to={'/registration'}>Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.preloader}>\r\n        <div className={s.spinner}/>\r\n    </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../../redux/store\";\r\nimport {createNewPasswordThunk, setError} from \"../../../redux/auth-reducer/reset-reducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport r from \"./resetPassword.module.css\";\r\n\r\nexport const AddNewPassword = () => {\r\n    const [password, setPassword] = useState('')\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>();\r\n    const dispatch = useDispatch()\r\n    const isCreate = useSelector<AppRootState, boolean>(state => state.reset.isCreate)\r\n    const isLoader = useSelector<AppRootState, boolean>(state => state.reset.isLoader)\r\n    const error = useSelector<AppRootState, string>(state => state.reset.error)\r\n    console.log(error)\r\n    if (isCreate) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return <div className={r.container}>\r\n        <div className={r.main}>\r\n        <h3>Create new password</h3>\r\n            {error && <span className={r.error}>{error}</span>}\r\n        <input value={password} onChange={(e) => {\r\n            setPassword(e.target.value)\r\n            dispatch(setError(''))\r\n        }} type=\"password\" placeholder={'password'}/>\r\n            <div className={r.textWrap}>\r\n        <span>Create new Password and we will send you\r\n        further instructions</span>\r\n            </div>\r\n            <div className={r.btnWrap}>\r\n        {isLoader ? <Preloader/> :\r\n            <button\r\n                    onClick={() => dispatch(createNewPasswordThunk(password, resetPasswordToken))}>Create new password</button>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import {useFormik} from 'formik';\r\nimport React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {singUp} from '../../../redux/auth-reducer/auth-reducer';\r\nimport {AppRootState} from '../../../redux/store';\r\nimport SuperInputText from '../../common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../common/c2-SuperButton/SuperButton';\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppRootState, string | null>(state => state.auth.userRegistrationData.email)\r\n    //formik\r\n    type FormErrorType = {\r\n        email?: string\r\n        password?: string\r\n        checkPassword?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            checkPassword: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Must be 7 characters at least';\r\n            }\r\n            if (!values.checkPassword) {\r\n                errors.checkPassword = 'Required';\r\n            } else if (values.checkPassword !== values.password) {\r\n                errors.checkPassword = 'Passwords should be equal';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm()\r\n            alert(JSON.stringify(values))\r\n            dispatch(singUp(values.email, values.password))\r\n        },\r\n    })\r\n\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <SuperInputText\r\n                    placeholder={'Email'}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.touched.email &&\r\n                    formik.errors.email ? <div style={{ color: 'red' }}>{formik.errors.email}</div> : null}\r\n                <SuperInputText\r\n                    type={'password'}\r\n                    placeholder={'Password'}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                {formik.touched.password &&\r\n                    formik.errors.password ? <div style={{ color: 'red' }}>{formik.errors.password}</div> : null}\r\n                <SuperInputText\r\n                    type={'password'}\r\n                    placeholder={'Password'}\r\n                    {...formik.getFieldProps('checkPassword')}\r\n                />\r\n                {formik.touched.checkPassword &&\r\n                    formik.errors.checkPassword ? <div style={{ color: 'red' }}>{formik.errors.checkPassword}</div> : null}\r\n                <SuperButton type={'submit'} title={'sign up'} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../../redux/store\";\r\nimport {forgotPasswordThunk, setError} from \"../../../redux/auth-reducer/reset-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport r from \"./resetPassword.module.css\"\r\n\r\nexport const ResetPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const isSent = useSelector<AppRootState, boolean>(state => state.reset.isSent)\r\n    const error = useSelector<AppRootState, string>(state => state.reset.error)\r\n    const isLoader = useSelector<AppRootState, boolean>(state => state.reset.isLoader)\r\n    const [email, setEmail] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const forgotPassword = (text: string) => {\r\n        dispatch(forgotPasswordThunk(text))\r\n    }\r\n    const changeIsSent = useCallback(() => {\r\n        dispatch(setError(''))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => changeIsSent()\r\n    }, [changeIsSent])\r\n\r\n    if (remember) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    if (isSent) {\r\n        return <Redirect to={'/set-new-password/:resetPasswordToken'}/>\r\n    }\r\n\r\n    return <div className={r.container}>\r\n        <div className={r.main}>\r\n            <h3>Forgot your password?</h3>\r\n            {error && <span className={r.error}>{error}</span>}\r\n            <input value={email} onChange={(e) => {\r\n                setEmail(e.target.value)\r\n                dispatch(setError(''))\r\n            }} type=\"email\" placeholder={'email'}/>\r\n            <div className={r.textWrap}>\r\n        <span>Enter your email address and we willsend you\r\n        further instructions</span>\r\n            </div>\r\n            <div className={r.btnWrap}>\r\n                {isLoader ? <div><Preloader/></div> :\r\n                    <button onClick={() => forgotPassword(email)}><span>Send instructions</span></button>\r\n                }\r\n            </div>\r\n            <div className={r.footer}>\r\n                <div className={r.textWrap}>\r\n                    <span>Did you remember your password?</span><br/>\r\n                </div>\r\n                <div className={r.btnFooterWrap}>\r\n                    <button onClick={() => {\r\n                        setRemember(true)\r\n                    }}><span>Try logging in</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../../redux/store\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {getUserDataTC, logOutTC} from \"../../../redux/login-reducer/login-reducer\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n    const name = useSelector<AppRootState, string>(state => state.login.name)\r\n    const avatar = useSelector<AppRootState, string>(state => state.login.avatar)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) return\r\n        dispatch(getUserDataTC())\r\n    }, [isLoggedIn, dispatch])\r\n\r\n    if (!isLoggedIn) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div>\r\n            Profile\r\n            <div>\r\n                <img src={avatar}\r\n                     alt={\"avatar\"}\r\n                    />\r\n                <div/>\r\n            <div>{name}<div/>\r\n                <div>\r\n                    <SuperButton  onClick={() => {\r\n                        dispatch(logOutTC())\r\n                    }} title={\"logout\"}/>\r\n\r\n                </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n","export const NotFound = () => {\r\n    return <>\r\n        NotFound\r\n        </>\r\n}\r\n","import SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport React from \"react\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText/>\r\n        <SuperCheckbox/>\r\n    </div>\r\n}\r\n","import {Login} from \"./login/login\";\r\nimport React from \"react\";\r\nimport {AddNewPassword} from \"./login/addNewPassword\";\r\nimport {Registration} from \"./login/registration\";\r\nimport {ResetPassword} from \"./login/resetPassword\";\r\nimport {Profile} from \"./profile/profile\";\r\nimport {NotFound} from \"./notFound/notFound\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Test} from \"../test/test\";\r\n\r\nexport const Main = () => {\r\n    return <>\r\n        <Switch>\r\n            <Route path={'/registration'} render={() => <Registration/>}/>\r\n            <Route path={'/login'} render={() => <Login/>}/>\r\n            <Route path={'/resetpassword'} render={() => <ResetPassword/>}/>\r\n            <Route path={'/set-new-password/:resetPasswordToken'} render={() => <AddNewPassword/>}/>\r\n            <Route path={'/profile'} render={() =>  <Profile/>}/>\r\n            <Route exact path={'/'} render={() => <Test/>}/>\r\n            <Route path={'/404'} render={() => <NotFound/>}/>\r\n            <Redirect from={'*'} to={'/404'}/>\r\n        </Switch>\r\n    </>\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"../redux/store\";\r\nimport { Header } from \"../components/header/header\";\r\nimport { Main } from \"../components/main/main\";\r\n\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n      <HashRouter>\r\n        <Header/>\r\n        <Main/>\r\n      </HashRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}